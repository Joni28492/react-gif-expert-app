{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMlB,SACI,uBACQO,KAAK,OACLC,MAAOT,EACPU,SAnBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPjBG,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAebM,GAfa,4CAAF,sDCARO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEjC,OACI,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAa,IAAD,EAEXd,mBACtB,CACIqB,KAAM,GACNa,SAAS,IALoB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAsBrC,OAdIC,qBAAW,WAEPxB,EAAQC,GAAUwB,MAAK,SAAAC,GAEnBH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAKlB,CAACpB,IAGAqB,EDpBwBK,CAAa1B,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAGpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACnDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACX,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEZpBgB,EAAe,WAAO,IAAD,EAIMzC,mBAAS,CAAC,cAJhB,mBAIvB0C,EAJuB,KAIX3C,EAJW,KAa9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCxBjC6B,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dd1da111.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        \r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue,...cats ]);   \r\n            setInputValue('');//para evitar doble posteo\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n}","\r\n\r\nexport  const getGifs =async (category) =>{\r\n\r\n    const url  = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=kKgYazoR4jSJq1BN4yn69S7yCmuBceLA`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img=>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n\r\n   return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img src={url} alt={title} />\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>  \r\n           {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"card-grid\">\r\n            {\r\n                images.map(img=>\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        {...img}\r\n                    />\r\n                )\r\n            }\r\n            </div>\r\n        </>\r\n           \r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setState] = useState(\r\n        {\r\n            data: [],\r\n            loading: true\r\n        });\r\n\r\n        useEffect( ()=>{\r\n\r\n            getGifs(category).then(imgs=>{\r\n\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n               \r\n            })\r\n\r\n        },[category])\r\n\r\n\r\n    return state;//{data:[], loading: true};\r\n}","import React, {useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    \r\n    \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n    // const handleAdd = () =>{\r\n    // //  setCategories(['HunterxHunter', ...categories]);\r\n    //     setCategories(cats => [...cats, 'HunterxHunter']);\r\n    // }\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category => \r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}